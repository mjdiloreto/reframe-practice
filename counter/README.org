* Counter
A very basic SPA using re-frame/reagent.
Based on the [[https://github.com/day8/re-frame-template][re-frame-template]].

** Notes for development with Emacs
Running from the terminal is trivial with
#+begin_src
lein do dev 
#+end_src


Usually though I want to do everything from Emacs using Cider, so my approach is:
1. cider-jack-in-cljs (C-c M-J)
2. shadow-cljs 
3. shadow
4. :app
5. Select "y" for "Do you want to open localhost:8240 in a web browser?

This will start the nrepl server, open a repl (in Emacs), open a browser with hot-reload and 
all the works.

I do not recommend using `cider-connect-cljs` as listed in the documentation for shadow-cljs,
since it seems to not open a cider session in emacs (i.e. no code completion for js namespace).


** Small tidbits of knowledge I would normally forget, but will write down for myself later.
There's probably a German word this section header...

*** Globally reference clojure keywords
You can define (in events.cljs) an event with id:
#+begin_src
:counter-inc
#+end_src
And in the view (views.cljs) you reference it via:
#+begin_src
:counter-inc
#+end_src

OR you can define it as:
#+begin_src
::counter-inc
#+end_src
and in views it becomes:
#+begin_src
:counter.events/counter-inc
#+end_src
Cider even autocompletes this correctly. Must be nice for larger projects.
